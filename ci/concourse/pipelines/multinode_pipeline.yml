
## resources
## ======================================================================

resources:
- name: gpdb_src
  type: git
  source:
    branch: gpcrondump-exclude-schema-fix-concourse
    private_key: {{private-repo-key}}
    uri: git@github.com:Chibin/gpdb4.git
- name: bin_gpdb
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: bin_gpdb/bin_gpdb.tar.gz
- name: sync_tools_gpdb
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: sync_tools_gpdb/sync_tools_gpdb.tar.gz
- name: installer_rhel5_gpdb
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: installer_rhel5_gpdb/greenplum-db-4.3.9.0-RHEL5-x86_64.zip
- name: hostfile
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: hostfile/internal-hosts

## ======================================================================
## jobs
## ======================================================================

# Stage 1: Build and C Unit Tests

jobs:
- name: compile_gpdb
  public: true
  plan:
  - get: gpdb_src
    resource: gpdb_src
    trigger: true
  - task: compile_gpdb
    file: gpdb_src/ci/concourse/compile_gpdb.yml
    params:
      TARGET_OS: centos
  - put: bin_gpdb
    params:
      file: bin_gpdb/bin_gpdb.tar.gz
  - put: sync_tools_gpdb
    params:
      file: sync_tools_gpdb/sync_tools_gpdb.tar.gz

# Stage 2: Packaging
- name: gpdb_rhel5_packaging
  public: true
  plan:
  - aggregate:
    - get: gpdb_src
      resource: gpdb_src
      passed: [compile_gpdb]
    - get: bin_gpdb
      passed: [compile_gpdb]
      trigger: true
  - task: gpdb_rhel5_packaging
    file: gpdb_src/ci/concourse/gpdb_packaging.yml
    params:
      INSTALL_SCRIPT_SRC: gpdb_src/gpAux/releng/bin/installer-header-rhel5-gpdb.sh
      INSTALLER_ZIP: packaged_gpdb/greenplum-db-4.3.9.0-RHEL5-x86_64.zip
  - put: installer_rhel5_gpdb
    params:
      file: packaged_gpdb/greenplum-db-4.3.9.0-RHEL5-x86_64.zip

# Stage 3: Behave Tests

- name: deploy_mn_busmoke
  public: true
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [gpdb_rhel5_packaging]
    - get: bin_gpdb
      passed: [gpdb_rhel5_packaging]
    - get: installer_rhel5_gpdb
      passed: [gpdb_rhel5_packaging]
      trigger: true
  - task: deploy
    file: gpdb_src/ci/concourse/deploy_multinode.yml
    privileged: true
    params:
      AWS_ACCESS_KEY: {{multinode-aws-access-key}}
      AWS_SECRET_KEY: {{multinode-aws-secret-key}}
      BOOTSTRAP_OVERRIDE: {{bootstrap-ami}}
      PRIVATE_KEY: {{multinode-aws-rsa-key}}
      AWS_SECURITY_GROUP: {{multinode-security-group}}
      SUBNET_ID: {{multinode-subnet-id}}
      VPC_ID: {{multinode-vpc-id}}
  - put: hostfile
    params:
      file: hostfile/internal-hosts

- name: mn_busmoke
  public: true
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [deploy_mn_busmoke]
    - get: bin_gpdb
      passed: [deploy_mn_busmoke]
    - get: installer_rhel5_gpdb
      passed: [deploy_mn_busmoke]
      trigger: true
    - get: hostfile
      passed: [deploy_mn_busmoke]
      trigger: true
      version: every
  - task: test
    file: gpdb_src/ci/concourse/multinode_behave_tests.yml
    privileged: true
    params:
      PRIVATE_KEY: {{multinode-aws-rsa-key}}
      BEHAVE_TAGS: backupsmoke

- name: destroy_mn_busmoke
  public: true
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [mn_busmoke]
    - get: hostfile
      passed: [mn_busmoke]
      trigger: true
      version: every
  - task: destroy
    file: gpdb_src/ci/concourse/destroy_multinode.yml
    privileged: true
    params:
      AWS_ACCESS_KEY: {{multinode-aws-access-key}}
      AWS_SECRET_KEY: {{multinode-aws-secret-key}}

- name: deploy_mn_backup
  public: true
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [gpdb_rhel5_packaging]
    - get: bin_gpdb
      passed: [gpdb_rhel5_packaging]
    - get: installer_rhel5_gpdb
      passed: [gpdb_rhel5_packaging]
      trigger: true
  - task: deploy
    file: gpdb_src/ci/concourse/deploy_multinode.yml
    privileged: true
    params:
      AWS_ACCESS_KEY: {{multinode-aws-access-key}}
      AWS_SECRET_KEY: {{multinode-aws-secret-key}}
      BOOTSTRAP_OVERRIDE: {{bootstrap-ami}}
      PRIVATE_KEY: {{multinode-aws-rsa-key}}
      AWS_SECURITY_GROUP: {{multinode-security-group}}
      SUBNET_ID: {{multinode-subnet-id}}
      VPC_ID: {{multinode-vpc-id}}
  - put: hostfile
    params:
      file: hostfile/internal-hosts

- name: mn_backup
  public: true
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [deploy_mn_backup]
    - get: bin_gpdb
      passed: [deploy_mn_backup]
    - get: installer_rhel5_gpdb
      passed: [deploy_mn_backup]
      trigger: true
    - get: hostfile
      passed: [deploy_mn_backup]
      trigger: true
      version: every
  - task: test
    file: gpdb_src/ci/concourse/multinode_behave_tests.yml
    privileged: true
    params:
      PRIVATE_KEY: {{multinode-aws-rsa-key}}
      BEHAVE_TAGS: backup,analyzedb,-wip

- name: destroy_mn_backup
  public: true
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [mn_backup]
    - get: hostfile
      passed: [mn_backup]
      trigger: true
      version: every
  - task: destroy
    file: gpdb_src/ci/concourse/destroy_multinode.yml
    privileged: true
    params:
      AWS_ACCESS_KEY: {{multinode-aws-access-key}}
      AWS_SECRET_KEY: {{multinode-aws-secret-key}}

# BehaveGPCheckCat
- name: deploy_mn_gpcheckcat
  public: true
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [gpdb_rhel5_packaging]
    - get: bin_gpdb
      passed: [gpdb_rhel5_packaging]
    - get: installer_rhel5_gpdb
      passed: [gpdb_rhel5_packaging]
      trigger: true
  - task: deploy
    file: gpdb_src/ci/concourse/deploy_multinode.yml
    privileged: true
    params:
      AWS_ACCESS_KEY: {{multinode-aws-access-key}}
      AWS_SECRET_KEY: {{multinode-aws-secret-key}}
      BOOTSTRAP_OVERRIDE: {{bootstrap-ami}}
      PRIVATE_KEY: {{multinode-aws-rsa-key}}
      AWS_SECURITY_GROUP: {{multinode-security-group}}
      SUBNET_ID: {{multinode-subnet-id}}
      VPC_ID: {{multinode-vpc-id}}
  - put: hostfile
    params:
      file: hostfile/internal-hosts

- name: mn_gpcheckcat
  public: true
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [deploy_mn_gpcheckcat]
    - get: bin_gpdb
      passed: [deploy_mn_gpcheckcat]
    - get: installer_rhel5_gpdb
      passed: [deploy_mn_gpcheckcat]
      trigger: true
    - get: hostfile
      passed: [deploy_mn_gpcheckcat]
      trigger: true
      version: every
  - task: test
    file: gpdb_src/ci/concourse/multinode_behave_tests.yml
    privileged: true
    params:
      PRIVATE_KEY: {{multinode-aws-rsa-key}}
      BEHAVE_TAGS: gpcheckcat,-wip

- name: destroy_mn_gpcheckcat
  public: true
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [mn_gpcheckcat]
    - get: hostfile
      passed: [mn_gpcheckcat]
      trigger: true
      version: every
  - task: destroy
    file: gpdb_src/ci/concourse/destroy_multinode.yml
    privileged: true
    params:
      AWS_ACCESS_KEY: {{multinode-aws-access-key}}
      AWS_SECRET_KEY: {{multinode-aws-secret-key}}


